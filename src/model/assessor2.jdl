/**
 * Generated by JHipster IDE plugin
 */
entity Principles {
	nameAr String required
	nameEn String required
	descriptionAr String
	descriptionEn String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}
entity Domain {
	nameAr String required
	nameEn String required
	descriptionAr String
	descriptionEn String
	code String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}


entity Control {
	code String
	nameAr String required
	nameEn String required
	descriptionAr String
	descriptionEn String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity ControlPriority {
	nameAr String required
	nameEn String required
	code String
	order Integer
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity ControlCategory {
	categoryAr String required
	categoryEn String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity Compliance {
	code String
	descriptionAr String
	descriptionEn String
	complianceVersion Integer
	version Long
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity ComplianceValues {
	ownership String
	justification String
	isCompleted Integer	
	evidenceName String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity ComplianceSchedule {
	text String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessmentSchedule {
	fromDate ZonedDateTime
	toDate ZonedDateTime
	descriptionAr String
	descriptionEn String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity ComplianceEvidenceType {
	nameAr String required
	nameEn String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity ComplianceEvidenceNote {
	text TextBlob
}

entity ComplianceEvidenceStatus {
	nameAr String required
	nameEn String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity Attachment {
	description String
	extension String
	generatedName String
	isActive  Integer
	mimeType String
	originalName String
	tableName String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity ComplianceStatus {
	statusAr String required
	statusEn String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity ComplianceFlag {
	nameAr String required
	nameEn String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity Applicant {
	name String
	code String
	personName String
	jobTitle String
	department String
	email String
	phone String
	phoneExt String
	contactPerson String
	contactPhone String
	contactEmail String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

relationship OneToMany {
	Principles{domains} to Domain{principle},
    Control{domains} to Domain{control},
    Control{compliances} to Compliance{control},
    ComplianceFlag{compliances} to Compliance{complianceFlag},
    ComplianceStatus {values} to ComplianceValues{complianceStatus},
    ComplianceSchedule{values} to ComplianceValues{complianceSchedule},
    ComplianceEvidenceType{values} to ComplianceValues{evidenceType},
    ComplianceEvidenceStatus{values} to ComplianceValues{evidenceStatus},
    ControlPriority{controls} to  Control{priority}
}

relationship ManyToMany {
	Domain{attachments} to Attachment{domains},
    ComplianceValues{attachments} to Attachment{values},
    Control{attachments} to Attachment{controls},
    Applicant{values} to ComplianceValues{applicants},
    Compliance{values} to ComplianceValues{compliance},
    ComplianceEvidenceNote{values} to ComplianceValues{notes},
    ControlCategory{controls} to Control{categories},
    AssessmentSchedule{schedules} to ComplianceSchedule{assessments}
}

dto * with mapstruct
paginate all with pagination
// Set service options to all except few
service all with serviceImpl
// Set an angular suffix
angularSuffix * with assess